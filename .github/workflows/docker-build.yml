name: Docker build

on:
  push:
    branches:
      - master
      - build

jobs:
  docker-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Login into Dockerhub
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login --username=${{ secrets.DOCKERHUB_LOGIN }} --password-stdin

      - name: Pull latest tick-take-api image
        run: docker pull fictionaldev/tick-take-api:latest

      - name: Build the tick-take-api image
        run: docker build --cache-from fictionaldev/tick-take-api:latest -t fictionaldev/tick-take-api .

      - name: Push tick-take-api image
        run: docker push fictionaldev/tick-take-api

      - name: Connect to server and update a container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            echo "PORT=${{ secrets.ENV_PORT }}" > .env.example
            echo "ACCESS_TOKEN_SECRET=${{ secrets.ENV_ACCESS_TOKEN_SECRET }}" >> .env.example
            echo "CLIENT_ORIGIN=${{ secrets.ENV_CLIENT_ORIGIN }}" >> .env.example
            echo "DB_NAME=${{ secrets.ENV_DB_NAME }}" >> .env.example
            echo "DB_SALT=${{ secrets.ENV_DB_SALT }}" >> .env.example
            echo "DB_URL=${{ secrets.ENV_DB_URL }}" >> .env.example
            docker pull fictionaldev/tick-take-api
            docker container stop tick-take-api || true
            docker container rm tick-take-api || true
            docker run --env-file=.env.example --name tick-take-api -d -p 80:${{ secrets.ENV_PORT }} -p 443:${{ secrets.ENV_PORT }} fictionaldev/tick-take-api
            rm .env.example
